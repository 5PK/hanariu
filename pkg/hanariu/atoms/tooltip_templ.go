// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.778
package hanariu

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"github.com/hanariu/hanariu/pkg/hanariu"
)

type TooltipBosons struct {
	Color     string `default:"white"`
	Id        string `default:"tooltip"`
	Placement string `default:"bottom"`
	Offset    string `default:"10"`
}

var tooltipColorStyles = hanariu.Boson{
	"white":     "bg-white text-secondary-800 border-secondary-200/75 dark:bg-primary-900 dark:border-secondary-800/50 dark:text-primary-100",
	"primary":   "bg-primary-600 text-white border-primary-600/75 dark:bg-primary-900 dark:border-primary-800/50",
	"secondary": "bg-secondary-600 text-white border-secondary-600/75 dark:bg-secondary-900 dark:border-secondary-800/50",
	"warning":   "bg-warning-600 text-white border-warning-600/75 dark:bg-warning-900 dark:border-warning-800/50",
	"danger":    "bg-danger-600 text-white border-danger-600/75 dark:bg-danger-900 dark:border-danger-800/50",
	"success":   "bg-success-600 text-white border-success-600/75 dark:bg-success-900 dark:border-success-800/50",
	"info":      "bg-info-600 text-white border-info-600/75 dark:bg-info-900 dark:border-info-800/50",
}

func Tooltip(props *TooltipBosons) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"border-0 px-1.5 py-1 z-30 text-sm\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templ_7745c5c3_Var1.Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var3 = []any{"absolute h-2 w-2 rotate-45 " + tooltipColorStyles[hanariu.GetTagDefault("Color", props.Color, TooltipBosons{})]}
			templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var3...)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div data-arrow=\"arrow\" class=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var4 string
			templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs(templ.CSSClasses(templ_7745c5c3_Var3).String())
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/hanariu/atoms/tooltip.templ`, Line: 1, Col: 0}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\"></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return templ_7745c5c3_Err
		})
		templ_7745c5c3_Err = tooltipContent(props).Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

func tooltipContent(props *TooltipBosons) templ.Component {
	attrs := make(hanariu.Attrs)

	var bind = "{['data-x-transition:enter']: 'transition transform-cpu ease-out duration-100',['data-x-transition:enter-start']: 'transition transform-cpu opacity-0 scale-95',['data-x-transition:enter-end']: 'transition transform-cpu opacity-100 scale-100',['data-x-transition:leave']: 'transition transform-cpu ease-in duration-75',['data-x-transition:leave-start']: 'transition transform-cpu opacity-100 scale-100',['data-x-transition:leave-end']: 'transition transform-cpu opacity-0 scale-95'"
	bind += "}"
	attrs["data-x-cloak"] = ""
	attrs["data-x-show"] = "open"
	idProp := hanariu.GetTagDefault("Id", props.Id, TooltipBosons{})
	placementProp := hanariu.GetTagDefault("Placement", props.Placement, TooltipBosons{})
	offsetProp := hanariu.GetTagDefault("Offset", props.Offset, TooltipBosons{})

	var anchor = "data-x-anchor." + placementProp + ".offset." + offsetProp
	attrs[anchor] = "$refs." + idProp
	attrs["data-x-bind"] = bind

	class := "absolute z-40 border rounded-md shadow-md w-max "
	class += tooltipColorStyles[hanariu.GetTagDefault("Color", props.Color, TooltipBosons{})]
	return hanariu.CreateComponent("div", class, attrs, false)
}

var _ = templruntime.GeneratedTemplate
