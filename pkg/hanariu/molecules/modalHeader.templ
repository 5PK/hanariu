package hanariu

import (
	"github.com/hanariu/hanariu/pkg/hanariu"
	protons "github.com/hanariu/hanariu/pkg/hanariu/protons"
	icons "github.com/hanariu/hanariu/pkg/hanariu/icons"
)

var modalHeaderStyles = hanariu.Boson{
	"default":    "relative w-full gap-4 px-6 pt-6",
	"horizontal": "flex flex-row",
	"vertical":   "flex flex-col",
	"close":      "absolute top-6 right-6",
}

var modalHeaderContentStyles = hanariu.Boson{
	"content":       "flex w-full flex-col",
	"contentCenter": "text-center",
	"title":         "pr-8 text-lg font-semibold text-secondary-900 dark:text-primary-200/80",
	"titleLeft":     "pr-8",
	"titleCenter":   "px-8",
	"msg":           "pt-1 text-sm font-normal text-secondary-900 dark:text-primary-200/60",
}

templ ModalHeader(orientation string) {
	<div class={ getModalHeaderClasses(orientation) }>
		{ children... }
	</div>
}

func getModalHeaderClasses(orientation string) string {
	if orientation == "vertical" {
		return modalHeaderStyles["default"] + " " + modalHeaderStyles["vertical"]
	} else {
		return modalHeaderStyles["default"] + " " + modalHeaderStyles["horizontal"]
	}
}

templ ModalHeaderHero(center bool) {
	if center {
		<div class="flex justify-center">
			{ children... }
		</div>
	} else {
		<div>
			{ children... }
		</div>
	}
}

templ ModalHeaderClose(title string) {
	<div class={ modalHeaderStyles["close"] }>
		<button class="inline-flex rounded bg-transparent text-secondary-700 hover:text-secondary-800 focus:outline-none focus:ring-2 focus:ring-secondary-500 focus:ring-offset-2 ring-offset-secondary-50 dark:ring-offset-primary-900/40 dark:text-primary-300 dark:hover:text-primary-100 dark:focus:ring-primary-800" data-x-bind="{['data-x-on:click']() { $store.overlay.close()}}" title={ title }>
			<span class="sr-only">{ title }</span>
			@protons.Icon(&protons.IconBosons{
				Size:  "sm",
				Color: "current",
			}) {
				@icons.IconTimes()
			}
		</button>
	</div>
}

templ ModalHeaderContent(title, align string) {
	<div class={ getModalHeaderContentClasess(align) }>
		<div class={ getModalHeaderTitleClasess(align) }>
			{ title }
		</div>
		<div class={ modalHeaderContentStyles["msg"] }>
			{ children... }
		</div>
	</div>
}

func getModalHeaderContentClasess(align string) string {
	var classes = modalHeaderContentStyles["content"]
	if align == "center" {
		classes += " " + modalHeaderContentStyles["contentCenter"]
	}
	return classes
}

func getModalHeaderTitleClasess(align string) string {
	var classes = modalHeaderContentStyles["title"]
	if align == "center" {
		classes += " " + modalHeaderContentStyles["titleCenter"]
	} else {
		classes += " " + modalHeaderContentStyles["titleLeft"]
	}
	return classes
}
